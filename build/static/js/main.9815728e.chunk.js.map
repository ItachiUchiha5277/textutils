{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","components/About.js","App.js","index.js"],"names":["Alert","props","style","height","alert","className","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Navbar","mode","to","src","alt","width","pointerEvents","title","id","activeclassname","aboutText","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","words","split","filter","element","length","minutes","first","toString","second","final","parseFloat","motion","div","initial","opacity","animate","transition","duration","color","heading","event","target","value","backgroundColor","replace","trim","textarea","document","getElementById","navigator","clipboard","writeText","showAlert","toFixed","About","myStyle","btnStyle","App","setAlert","setMode","body","exact","path","message","setTimeout","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9815728e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word) => {\r\n        let lower = word.toLowerCase()\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1)\r\n    }\r\n    return (\r\n        <div style={{height: '50px'}}>\r\n            {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                {capitalize(props.alert.type)}. {props.alert.msg}\r\n            </div>}\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  const capitalize = (word) => {\r\n    let lower = word.toLowerCase()\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1)\r\n  }\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\"><img src=\"./favicon.png\" alt=\"\" className=\"d-inline-block align-text-top\" width=\"30\" height=\"30\" style={{pointerEvents: 'none'}}/> {props.title}</Link>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <NavLink activeclassname=\"active\" className=\"nav-link\" aria-current=\"page\" to=\"/\">Home</NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink activeclassname=\"active\" className=\"nav-link\" to=\"/about\">{props.aboutText}</NavLink>\r\n            </li>\r\n          </ul>\r\n          <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n            <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode} />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{`Enable ${capitalize(props.mode === 'dark' ? 'light' : 'dark')} Mode`}</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { motion } from \"framer-motion\"\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () => {\r\n        if (text === null) {\r\n            return\r\n        }\r\n        else {\r\n            setText(text.toUpperCase())\r\n        }\r\n    }\r\n    const handleLoClick = () => {\r\n        if (text === null) {\r\n            return\r\n        }\r\n        else {\r\n            setText(text.toLowerCase())\r\n        }\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setText(event.target.value)\r\n    }\r\n\r\n    const clearText = () => {\r\n        setText('')\r\n    }\r\n\r\n    const removeExtraSpaces = () => {\r\n        setText(text.replace(/\\s+/g, ' ').trim())\r\n    }\r\n\r\n    const copyText = () => {\r\n        let textarea = document.getElementById('textarea')\r\n        navigator.clipboard.writeText(textarea.value)\r\n        props.showAlert('Text Copied!', 'success')\r\n    }\r\n\r\n    const [text, setText] = useState('')\r\n\r\n    let words = text.split(/\\s+/).filter((element) => { return element.length !== 0 }).length\r\n\r\n    let minutes = words * 0.008\r\n    let first = minutes.toString().split('.')[0]\r\n    let second = '0.' + minutes.toString().split('.')[1]\r\n    let final = parseFloat(second) * 60\r\n\r\n    return (\r\n        <>\r\n            <motion.div \r\n            initial={{opacity: 0}}\r\n            animate={{opacity: 1}}\r\n            transition={{duration: 0.6}}\r\n            >\r\n                <div className=\"mb-3 my-3\" style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n                    <h1>{props.heading}</h1>\r\n\r\n                    <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" id=\"textarea\" rows=\"8\" placeholder=\"Enter text here\" value={text} onChange={handleOnChange} style={{ backgroundColor: props.mode === 'dark' ? '#1f232e' : 'white', color: props.mode === 'dark' ? 'white' : 'black' }}></textarea>\r\n\r\n                    <button type=\"button\" onClick={handleUpClick} className={`btn btn-${props.mode==='dark'?'dark':'primary'} my-3 ${text.length===0?'disabled':''}`}>Convert to <b>UPPERCASE</b> </button>\r\n\r\n                    <button type=\"button\" onClick={handleLoClick} className={`btn btn-${props.mode==='dark'?'dark':'primary'} my-3 mx-2 ${text.length===0?'disabled':''}`}>Convert to <b>lowercase</b> </button>\r\n\r\n                    <button type=\"button\" className={`btn btn-${props.mode==='dark'?'dark':'primary'} my-3 ${text.length===0?'disabled':''}`} onClick={clearText}>Clear Text</button>\r\n\r\n                    <button type=\"button\" className={`btn btn-${props.mode==='dark'?'dark':'primary'} my-3 mx-2 ${text.length===0?'disabled':''}`} onClick={removeExtraSpaces}>Remove extra spaces</button>\r\n\r\n                    <button type=\"button\" className={`btn btn-${props.mode==='dark'?'dark':'primary'} my-3 ${text.length===0?'disabled':''}`} onClick={copyText}>Copy Text</button>\r\n                </div>\r\n                <hr style={{ color: props.mode === 'dark' ? 'white' : 'black' }} />\r\n                <div style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n                    <div className=\"container my-5\">\r\n                        <h2>Text Summary</h2>\r\n                        <p><b>{words}</b> words <b>{text === null ? 0 : text.length}</b> characters</p>\r\n                    </div>\r\n\r\n                    <div className=\"container my-5\">\r\n                        <h2>Estimated Reading Time</h2>\r\n                        <p><b>{first}</b> minutes <b>{final.toFixed(1)}</b> seconds</p>\r\n                    </div>\r\n\r\n                    <div className=\"container my-5\">\r\n                        <h2>Preview</h2>\r\n                        <p>{text.length!==0 ? text : 'Nothing to preview here'}</p>\r\n                    </div>\r\n                </div>\r\n            </motion.div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { motion } from 'framer-motion'\r\n\r\nexport default function About(props) {\r\n    let myStyle = {\r\n        backgroundColor: props.mode === 'dark' ? '#1f232e' : 'white',\r\n        color: props.mode === 'dark' ? 'white' : 'black',\r\n    }\r\n    let btnStyle = {\r\n        backgroundColor: props.mode === 'dark' ? '#4d5469' : 'white',\r\n        color: props.mode === 'dark' ? 'white' : 'black',\r\n    }\r\n    return (\r\n        <motion.div\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            transition={{ duration: 0.6 }}\r\n        >\r\n            <h1 className=\"my-5\" style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>About TextUtils</h1>\r\n            <div className=\"accordion\" id=\"accordionExample\" style={myStyle}>\r\n                <div className=\"accordion-item\" style={myStyle}>\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                        <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\" style={btnStyle}>\r\n                            Accordion Item #1\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\">\r\n                            <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\" style={myStyle}>\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\" style={btnStyle}>\r\n                            Accordion Item #2\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\">\r\n                            <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\" style={myStyle}>\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\" style={btnStyle}>\r\n                            Accordion Item #3\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\">\r\n                            <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </motion.div>\r\n    )\r\n}\r\n","\r\nimport './App.css';\r\nimport Alert from './components/Alert';\r\nimport Navbar from './components/Navbar';\r\nimport TextForm from './components/TextForm';\r\nimport React, { useState } from 'react'\r\nimport About from './components/About';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  const [alert, setAlert] = useState(null)\r\n\r\n  const [mode, setMode] = useState('light')\r\n  const toggleMode = () => {\r\n    if (mode === 'light') {\r\n      setMode('dark')\r\n      document.body.style.backgroundColor = '#2c3038'\r\n    }\r\n    else {\r\n      setMode('light')\r\n      document.body.style.backgroundColor = 'white'\r\n    }\r\n  }\r\n\r\n  const showAlert = (message, type) => {\r\n    setAlert({\r\n      msg: message,\r\n      type: type\r\n    })\r\n\r\n    setTimeout(() => {\r\n      setAlert(null)\r\n    }, 2000);\r\n  }\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Navbar title=\"TextUtils\" aboutText=\"About TextUtils\" mode={mode} toggleMode={toggleMode} />\r\n        <Alert alert={alert} />\r\n        <div className=\"container\">\r\n          <Routes>\r\n            <Route exact path=\"/about\" element={<About mode={mode} />}></Route>\r\n            <Route exact path=\"/\" element={<TextForm showAlert={showAlert} mode={mode} heading=\"Enter the text to analayze\" />}></Route>\r\n          </Routes>\r\n        </div>\r\n\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}